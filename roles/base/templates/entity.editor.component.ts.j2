import { Component, OnInit, Inject } from '@angular/core';
import { MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';
import { Observable } from 'rxjs';
import { {{ entity.name }} } from '../../domain/{{ entity.name|lower }}';
import { {{ entity.name }}Service } from '../../services/{{ entity.name|lower }}.service';
{% for field in fields %}
{% if field.attributes|selectattr("name","equalto","fk")|selectattr("value","equalto","ManyToOne")|list|length > 0 %}
{% set fkField = (field.attributes|selectattr("name","equalto","type")|first).value %}
import { {{ fkField }} } from '../../domain/{{ fkField|lower }}'; 
{% endif %}
{% endfor %}
   
@Component({
  selector: 'app-{{ entity.name|lower }}-editor',
  templateUrl: './{{ entity.name|lower }}.editor.component.html',
  styleUrls: ['./{{ entity.name|lower }}.editor.component.scss']
})
export class {{ entity.name }}EditorComponent implements OnInit, AfterViewInit {

    private {{ entity.name|lower }}: {{ entity.name }};

{% for field in fields %}
{% if field.attributes|selectattr("name","equalto","fk")|selectattr("value","equalto","ManyToOne")|list|length > 0 %}
{% set fkField = (field.attributes|selectattr("name","equalto","type")|first).value %}
    {{ fkField|lower }}$: Observable<{{ fkField }}[]>;
{% endif %}
{% endfor %}

    constructor(
      public dialogRef: MatDialogRef<{{ entity.name }}EditorComponent>,
      private {{ entity.name|lower }}Service: {{ entity.name }}Service,
{% for field in fields %}
{% if field.attributes|selectattr("name","equalto","fk")|selectattr("value","equalto","ManyToOne")|list|length > 0 %}
{% set fkField = (field.attributes|selectattr("name","equalto","type")|first).value %}
      private {{ fkField|lower }}Service: {{ fkField }}Service,
{% endif %}
{% endfor %}
      @Inject(MAT_DIALOG_DATA) public data: {{ entity.name }}
    ) {}

    ngOnInit() {
    }

    ngAfterViewInit() {
{% for field in fields %}
{% if field.attributes|selectattr("name","equalto","fk")|selectattr("value","equalto","ManyToOne")|list|length > 0 %}
{% set fkField = (field.attributes|selectattr("name","equalto","type")|first).value %}
      this.{{ fkField|lower }}$  = this.{{ fkField|lower }}Service.getAll();
{% endif %}
{% endfor %}
    }

    onCancel(): void {
      this.dialogRef.close();
    }

    onSave(): void {
      if (this.data.id) {
        this.{{ entity.name|lower }}Service.update(this.data)
          .subscribe(() => this.dialogRef.close());
      } else {
        this.{{ entity.name|lower }}Service.add(this.data)
          .subscribe(() => this.dialogRef.close());
      }
  }
}
